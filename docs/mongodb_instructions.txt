geolocation_basic
=================

A Drupal Geolocation Module

Mongodb Setup

--------------------------------------------------

This module comes with the optional availability to have its data sources in a Mongodb database/collection setup.  While Mongodb can offer many advantages over a traditional RDBMS setup with performance and scalability, it should only implmeneted if it best suits your site's needs and must be set up by a knowledgeable developer.   Use of Drupal's mongodb module will be required.  Using Mongodb will override the use of the standard RDBMS tables in the module, except for IP lookups if using the binary database. 

Instructions:

1) If you haven't already done so, install mongodb on your server.  Detailed instructions for your platform can be found here:  http://docs.mongodb.org/manual/installation/
2) Install the Drupal mongodb driver on your site, following all instructions.
3) On the command line, navigate to the module's mongodb directory and type in the following command:  mongorestore.  This will create a database called geolocation.
4) Import the applicable CSV files as necessary for the geolocation_dma, geolocation_cities, and geolocation_ip_locations collections.  Importing geolocaiton_dma can be omitted if you don't intend to use that feature.  Skip to step 5 if applicable.
	4a) Whether using the geolite or geoip versions, Maxmind provides two CSV files.  The file name ending in -Blocks and -Locations correlates to the geolocation_ip_locations and geolocation_cities collections respectively.
	4b) In both files, delete the Maxmind copyright notice, as it will interfere with the import process.
	4c) In the blocks file, replace the existing headers (startIpNum, endIpNum, locId) with the new headers (start_ip_num, end_ip_num, loc_id).
	4d) In the location file, replace the existing headers (locId, country, region, city, postalCode, latitude, longitude,	metroCode, areaCode) with the new headers (id, country, state_region, postal_code, lat, lng, dma_code, area_code).
	4e) The DMA information is automatically included as a part of the RDBMS setup and can easily be exported as a CSV with most any db admin application.
	4f) Import the CSV file(s) into the database.  Detailed instructions on CSV imports can be found here:  http://docs.mongodb.org/manual/core/import-export/
	4g) To run geolocation queries on geolocation_cities and geolocation_dma, you will need to create an extra column for mongodb to use as a gelocation index and make the proper index.  This is best accomplished on the command line. The code is currently set up to run 2dsphere queries.  For Mongo environments that can only support 2d queries, custom setup of the queries in the code will be required.  2dsphere example:
		db.geolocation_cities.find().forEach(
			function(elem){
				var newLoc = {type: 'Point', coordinates: [elem.lng, elem.lat]};
				db.geolocation_cities.update({_id: elem._id}, {$set: {loc: newLoc}});
			}
		);
		db.geolocation_cities.ensureIndex({loc: '2dsphere'});


5) On approximately line 16 in inc/class.geolocation_basic_abstract.inc, change the $useMongo variable value to true.
6) Clear the Drupal cache.